<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20204.21.0114.0916                               -->
<workbook original-version='18.1' source-build='2020.4.1 (20204.21.0114.0916)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelExtractV2.true...ObjectModelExtractV2 />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <_.fcp.SetMembershipControl.true...SetMembershipControl />
    <SheetIdentifierTracking />
    <WindowsPersistSimpleIdentifiers />
    <WorksheetBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='COVID_month' inline='true' name='federated.1w1en2f1ejr3or1cekije1cb8oyi' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='COVID_month' name='textscan.0imac6x1x6mvnd14jwmv10lh0b7m'>
            <connection class='textscan' directory='C:/Users/xiaon/Desktop' filename='COVID_month.csv' password='' port='0' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.0imac6x1x6mvnd14jwmv10lh0b7m' name='COVID_month.csv' table='[COVID_month#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='string' name='state' ordinal='0' />
            <column datatype='integer' name='month' ordinal='1' />
            <column datatype='integer' name='fips' ordinal='2' />
            <column datatype='integer' name='cases' ordinal='3' />
            <column datatype='integer' name='deaths' ordinal='4' />
            <column datatype='real' name='new_cases' ordinal='5' />
            <column datatype='real' name='new_deaths' ordinal='6' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.0imac6x1x6mvnd14jwmv10lh0b7m' name='COVID_month.csv' table='[COVID_month#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='string' name='state' ordinal='0' />
            <column datatype='integer' name='month' ordinal='1' />
            <column datatype='integer' name='fips' ordinal='2' />
            <column datatype='integer' name='cases' ordinal='3' />
            <column datatype='integer' name='deaths' ordinal='4' />
            <column datatype='real' name='new_cases' ordinal='5' />
            <column datatype='real' name='new_deaths' ordinal='6' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[COVID_month.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>state</remote-name>
            <remote-type>129</remote-type>
            <local-name>[state]</local-name>
            <parent-name>[COVID_month.csv]</parent-name>
            <remote-alias>state</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[COVID_month.csv_16B8207B8149493396BE2D94190ED822]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>month</remote-name>
            <remote-type>20</remote-type>
            <local-name>[month]</local-name>
            <parent-name>[COVID_month.csv]</parent-name>
            <remote-alias>month</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[COVID_month.csv_16B8207B8149493396BE2D94190ED822]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>fips</remote-name>
            <remote-type>20</remote-type>
            <local-name>[fips]</local-name>
            <parent-name>[COVID_month.csv]</parent-name>
            <remote-alias>fips</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[COVID_month.csv_16B8207B8149493396BE2D94190ED822]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cases</remote-name>
            <remote-type>20</remote-type>
            <local-name>[cases]</local-name>
            <parent-name>[COVID_month.csv]</parent-name>
            <remote-alias>cases</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[COVID_month.csv_16B8207B8149493396BE2D94190ED822]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>deaths</remote-name>
            <remote-type>20</remote-type>
            <local-name>[deaths]</local-name>
            <parent-name>[COVID_month.csv]</parent-name>
            <remote-alias>deaths</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[COVID_month.csv_16B8207B8149493396BE2D94190ED822]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_cases</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_cases]</local-name>
            <parent-name>[COVID_month.csv]</parent-name>
            <remote-alias>new_cases</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[COVID_month.csv_16B8207B8149493396BE2D94190ED822]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_deaths</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_deaths]</local-name>
            <parent-name>[COVID_month.csv]</parent-name>
            <remote-alias>new_deaths</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[COVID_month.csv_16B8207B8149493396BE2D94190ED822]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <_.fcp.ObjectModelTableType.true...column caption='COVID_month.csv' datatype='table' name='[__tableau_internal_object_id__].[COVID_month.csv_16B8207B8149493396BE2D94190ED822]' role='measure' type='quantitative' />
      <column caption='Cases' datatype='integer' name='[cases]' role='measure' type='quantitative' />
      <column caption='Deaths' datatype='integer' name='[deaths]' role='measure' type='quantitative' />
      <column caption='Fips' datatype='integer' name='[fips]' role='measure' type='quantitative' />
      <column caption='Month' datatype='integer' name='[month]' role='dimension' type='quantitative' />
      <column caption='New Cases' datatype='real' name='[new_cases]' role='measure' type='quantitative' />
      <column caption='New Deaths' datatype='real' name='[new_deaths]' role='measure' type='quantitative' />
      <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='COVID_month.csv' id='COVID_month.csv_16B8207B8149493396BE2D94190ED822'>
            <properties context=''>
              <relation connection='textscan.0imac6x1x6mvnd14jwmv10lh0b7m' name='COVID_month.csv' table='[COVID_month#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='string' name='state' ordinal='0' />
                  <column datatype='integer' name='month' ordinal='1' />
                  <column datatype='integer' name='fips' ordinal='2' />
                  <column datatype='integer' name='cases' ordinal='3' />
                  <column datatype='integer' name='deaths' ordinal='4' />
                  <column datatype='real' name='new_cases' ordinal='5' />
                  <column datatype='real' name='new_deaths' ordinal='6' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='COVID_Unemployment' inline='true' name='federated.0wp1y680rxbki7153a5b00oh85n4' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='COVID_Unemployment' name='textscan.1nwnjy71rxzdwv1aegkxi02mno3x'>
            <connection class='textscan' directory='C:/Users/xiaon/Desktop' filename='COVID_Unemployment.csv' password='' port='0' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.1nwnjy71rxzdwv1aegkxi02mno3x' name='COVID_Unemployment.csv' table='[COVID_Unemployment#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='integer' name='F1' ordinal='0' />
            <column datatype='string' name='State' ordinal='1' />
            <column datatype='string' name='Month' ordinal='2' />
            <column datatype='real' name='Unemployment rate' ordinal='3' />
            <column datatype='real' name='New cases' ordinal='4' />
            <column datatype='real' name='New Deaths' ordinal='5' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.1nwnjy71rxzdwv1aegkxi02mno3x' name='COVID_Unemployment.csv' table='[COVID_Unemployment#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='integer' name='F1' ordinal='0' />
            <column datatype='string' name='State' ordinal='1' />
            <column datatype='string' name='Month' ordinal='2' />
            <column datatype='real' name='Unemployment rate' ordinal='3' />
            <column datatype='real' name='New cases' ordinal='4' />
            <column datatype='real' name='New Deaths' ordinal='5' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[COVID_Unemployment.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F1</remote-name>
            <remote-type>20</remote-type>
            <local-name>[F1]</local-name>
            <parent-name>[COVID_Unemployment.csv]</parent-name>
            <remote-alias>F1</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[COVID_Unemployment.csv_1F0CA63D2EBF48C6A6E3C83869146382]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State</remote-name>
            <remote-type>129</remote-type>
            <local-name>[State]</local-name>
            <parent-name>[COVID_Unemployment.csv]</parent-name>
            <remote-alias>State</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[COVID_Unemployment.csv_1F0CA63D2EBF48C6A6E3C83869146382]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Month</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Month]</local-name>
            <parent-name>[COVID_Unemployment.csv]</parent-name>
            <remote-alias>Month</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[COVID_Unemployment.csv_1F0CA63D2EBF48C6A6E3C83869146382]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Unemployment rate</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Unemployment rate]</local-name>
            <parent-name>[COVID_Unemployment.csv]</parent-name>
            <remote-alias>Unemployment rate</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[COVID_Unemployment.csv_1F0CA63D2EBF48C6A6E3C83869146382]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>New cases</remote-name>
            <remote-type>5</remote-type>
            <local-name>[New cases]</local-name>
            <parent-name>[COVID_Unemployment.csv]</parent-name>
            <remote-alias>New cases</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[COVID_Unemployment.csv_1F0CA63D2EBF48C6A6E3C83869146382]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>New Deaths</remote-name>
            <remote-type>5</remote-type>
            <local-name>[New Deaths]</local-name>
            <parent-name>[COVID_Unemployment.csv]</parent-name>
            <remote-alias>New Deaths</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[COVID_Unemployment.csv_1F0CA63D2EBF48C6A6E3C83869146382]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='real' name='[New cases]' role='measure' type='quantitative' />
      <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column datatype='real' name='[Unemployment rate]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='COVID_Unemployment.csv' datatype='table' name='[__tableau_internal_object_id__].[COVID_Unemployment.csv_1F0CA63D2EBF48C6A6E3C83869146382]' role='measure' type='quantitative' />
      <column-instance column='[Unemployment rate]' derivation='Avg' name='[avg:Unemployment rate:qk]' pivot='key' type='quantitative' />
      <column-instance column='[New cases]' derivation='Sum' name='[sum:New cases:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Unemployment rate]' derivation='Sum' name='[sum:Unemployment rate:qk]' pivot='key' type='quantitative' />
      <extract _.fcp.ObjectModelExtractV2.true...object-id='' count='-1' enabled='true' units='records'>
        <connection access_mode='readonly' authentication='auth-none' author-locale='en_US' class='hyper' dbname='C:/Users/xiaon/Documents/GitHub/data_analytics_2/Tableau/COVID_Unemployment.hyper' default-settings='yes' schema='Extract' sslmode='' tablename='Extract' update-time='01/31/2021 08:10:20 PM' username='tableau_internal_user'>
          <_.fcp.ObjectModelEncapsulateLegacy.false...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <_.fcp.ObjectModelEncapsulateLegacy.true...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <refresh>
            <refresh-event add-from-file-path='COVID_Unemployment' increment-value='%null%' refresh-type='create' rows-inserted='357' timestamp-start='2021-01-31 20:10:20.206' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>F1</remote-name>
              <remote-type>20</remote-type>
              <local-name>[F1]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>F1</remote-alias>
              <ordinal>0</ordinal>
              <family>COVID_Unemployment.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>7</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[COVID_Unemployment.csv_1F0CA63D2EBF48C6A6E3C83869146382]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>State</remote-name>
              <remote-type>129</remote-type>
              <local-name>[State]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>State</remote-alias>
              <ordinal>1</ordinal>
              <family>COVID_Unemployment.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>51</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[COVID_Unemployment.csv_1F0CA63D2EBF48C6A6E3C83869146382]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Month</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Month]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Month</remote-alias>
              <ordinal>2</ordinal>
              <family>COVID_Unemployment.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>7</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[COVID_Unemployment.csv_1F0CA63D2EBF48C6A6E3C83869146382]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Unemployment rate</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Unemployment rate]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Unemployment rate</remote-alias>
              <ordinal>3</ordinal>
              <family>COVID_Unemployment.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>139</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[COVID_Unemployment.csv_1F0CA63D2EBF48C6A6E3C83869146382]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>New cases</remote-name>
              <remote-type>5</remote-type>
              <local-name>[New cases]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>New cases</remote-alias>
              <ordinal>4</ordinal>
              <family>COVID_Unemployment.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>354</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[COVID_Unemployment.csv_1F0CA63D2EBF48C6A6E3C83869146382]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>New Deaths</remote-name>
              <remote-type>5</remote-type>
              <local-name>[New Deaths]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>New Deaths</remote-alias>
              <ordinal>5</ordinal>
              <family>COVID_Unemployment.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>263</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[COVID_Unemployment.csv_1F0CA63D2EBF48C6A6E3C83869146382]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0wp1y680rxbki7153a5b00oh85n4].[sum:New cases:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0wp1y680rxbki7153a5b00oh85n4].[avg:Unemployment rate:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0wp1y680rxbki7153a5b00oh85n4].[sum:Unemployment rate:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='COVID_Unemployment.csv' id='COVID_Unemployment.csv_1F0CA63D2EBF48C6A6E3C83869146382'>
            <properties context=''>
              <relation connection='textscan.1nwnjy71rxzdwv1aegkxi02mno3x' name='COVID_Unemployment.csv' table='[COVID_Unemployment#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='integer' name='F1' ordinal='0' />
                  <column datatype='string' name='State' ordinal='1' />
                  <column datatype='string' name='Month' ordinal='2' />
                  <column datatype='real' name='Unemployment rate' ordinal='3' />
                  <column datatype='real' name='New cases' ordinal='4' />
                  <column datatype='real' name='New Deaths' ordinal='5' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='New Cases Map'>
      <table>
        <view>
          <datasources>
            <datasource caption='COVID_month' name='federated.1w1en2f1ejr3or1cekije1cb8oyi' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1w1en2f1ejr3or1cekije1cb8oyi'>
            <column caption='New Cases' datatype='real' name='[new_cases]' role='measure' type='quantitative' />
            <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
            <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[new_cases]' derivation='Sum' name='[sum:new_cases:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1w1en2f1ejr3or1cekije1cb8oyi].[Longitude (generated)]' field-type='quantitative' max='33488102.662802506' min='25636922.750218663' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1w1en2f1ejr3or1cekije1cb8oyi].[Latitude (generated)]' field-type='quantitative' max='7388023.8875703644' min='1600959.8466831888' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1w1en2f1ejr3or1cekije1cb8oyi].[sum:new_cases:qk]' />
              <text column='[federated.1w1en2f1ejr3or1cekije1cb8oyi].[none:state:nk]' />
              <lod column='[federated.1w1en2f1ejr3or1cekije1cb8oyi].[none:state:nk]' />
              <color column='[federated.1w1en2f1ejr3or1cekije1cb8oyi].[sum:new_cases:qk]' />
              <geometry column='[federated.1w1en2f1ejr3or1cekije1cb8oyi].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1w1en2f1ejr3or1cekije1cb8oyi].[Latitude (generated)]</rows>
        <cols>[federated.1w1en2f1ejr3or1cekije1cb8oyi].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{14E2B4CD-9974-4F71-82CE-79AA8FCDFC56}' />
    </worksheet>
    <worksheet name='New Cases and deaths plot'>
      <table>
        <view>
          <datasources>
            <datasource caption='COVID_month' name='federated.1w1en2f1ejr3or1cekije1cb8oyi' />
          </datasources>
          <datasource-dependencies datasource='federated.1w1en2f1ejr3or1cekije1cb8oyi'>
            <column caption='Month' datatype='integer' name='[month]' role='dimension' type='quantitative' />
            <column caption='New Cases' datatype='real' name='[new_cases]' role='measure' type='quantitative' />
            <column caption='New Deaths' datatype='real' name='[new_deaths]' role='measure' type='quantitative' />
            <column-instance column='[month]' derivation='None' name='[none:month:qk]' pivot='key' type='quantitative' />
            <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
            <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[new_cases]' derivation='Sum' name='[sum:new_cases:qk]' pivot='key' type='quantitative' />
            <column-instance column='[new_deaths]' derivation='Sum' name='[sum:new_deaths:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1w1en2f1ejr3or1cekije1cb8oyi].[none:state:nk]'>
            <groupfilter function='member' level='[none:state:nk]' member='&quot;New York&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1w1en2f1ejr3or1cekije1cb8oyi].[none:state:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1w1en2f1ejr3or1cekije1cb8oyi].[sum:new_deaths:qk]' field-type='quantitative' fold='true' scope='rows' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1w1en2f1ejr3or1cekije1cb8oyi].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1w1en2f1ejr3or1cekije1cb8oyi].[sum:new_cases:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1w1en2f1ejr3or1cekije1cb8oyi].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1w1en2f1ejr3or1cekije1cb8oyi].[sum:new_deaths:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1w1en2f1ejr3or1cekije1cb8oyi].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.1w1en2f1ejr3or1cekije1cb8oyi].[sum:new_cases:qk] + [federated.1w1en2f1ejr3or1cekije1cb8oyi].[sum:new_deaths:qk])</rows>
        <cols>[federated.1w1en2f1ejr3or1cekije1cb8oyi].[none:month:qk]</cols>
      </table>
      <simple-id uuid='{0D4780CA-B061-4181-B1AC-B9E6A4F8B49D}' />
    </worksheet>
    <worksheet name='New Cases and unemployment'>
      <table>
        <view>
          <datasources>
            <datasource caption='COVID_Unemployment' name='federated.0wp1y680rxbki7153a5b00oh85n4' />
          </datasources>
          <datasource-dependencies datasource='federated.0wp1y680rxbki7153a5b00oh85n4'>
            <column datatype='string' name='[Month]' role='dimension' type='nominal' />
            <column datatype='real' name='[New cases]' role='measure' type='quantitative' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column datatype='real' name='[Unemployment rate]' role='measure' type='quantitative' />
            <column-instance column='[Unemployment rate]' derivation='Avg' name='[avg:Unemployment rate:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Month]' derivation='None' name='[none:Month:nk]' pivot='key' type='nominal' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[New cases]' derivation='Sum' name='[sum:New cases:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0wp1y680rxbki7153a5b00oh85n4].[none:State:nk]'>
            <groupfilter function='level-members' level='[none:State:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0wp1y680rxbki7153a5b00oh85n4].[none:State:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0wp1y680rxbki7153a5b00oh85n4].[avg:Unemployment rate:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0wp1y680rxbki7153a5b00oh85n4].[sum:New cases:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
          </pane>
        </panes>
        <rows>([federated.0wp1y680rxbki7153a5b00oh85n4].[avg:Unemployment rate:qk] + [federated.0wp1y680rxbki7153a5b00oh85n4].[sum:New cases:qk])</rows>
        <cols>[federated.0wp1y680rxbki7153a5b00oh85n4].[none:Month:nk]</cols>
      </table>
      <simple-id uuid='{5C784BF0-F6D2-43F4-AC68-98C27E6CD81C}' />
    </worksheet>
    <worksheet name='New Cases and unemployment (2)'>
      <table>
        <view>
          <datasources>
            <datasource caption='COVID_Unemployment' name='federated.0wp1y680rxbki7153a5b00oh85n4' />
          </datasources>
          <datasource-dependencies datasource='federated.0wp1y680rxbki7153a5b00oh85n4'>
            <column datatype='string' name='[Month]' role='dimension' type='nominal' />
            <column datatype='real' name='[New cases]' role='measure' type='quantitative' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column datatype='real' name='[Unemployment rate]' role='measure' type='quantitative' />
            <column-instance column='[Month]' derivation='None' name='[none:Month:nk]' pivot='key' type='nominal' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[New cases]' derivation='Sum' name='[sum:New cases:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Unemployment rate]' derivation='Sum' name='[sum:Unemployment rate:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0wp1y680rxbki7153a5b00oh85n4].[none:State:nk]'>
            <groupfilter function='member' level='[none:State:nk]' member='&quot;New York&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0wp1y680rxbki7153a5b00oh85n4].[none:State:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0wp1y680rxbki7153a5b00oh85n4].[sum:Unemployment rate:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0wp1y680rxbki7153a5b00oh85n4].[sum:New cases:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>([federated.0wp1y680rxbki7153a5b00oh85n4].[sum:Unemployment rate:qk] + [federated.0wp1y680rxbki7153a5b00oh85n4].[sum:New cases:qk])</rows>
        <cols>[federated.0wp1y680rxbki7153a5b00oh85n4].[none:Month:nk]</cols>
      </table>
      <simple-id uuid='{830667CA-322D-48FC-B82D-D87C1FA99204}' />
    </worksheet>
    <worksheet name='New Deaths Map'>
      <table>
        <view>
          <datasources>
            <datasource caption='COVID_month' name='federated.1w1en2f1ejr3or1cekije1cb8oyi' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1w1en2f1ejr3or1cekije1cb8oyi'>
            <column caption='New Deaths' datatype='real' name='[new_deaths]' role='measure' type='quantitative' />
            <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
            <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[new_deaths]' derivation='Sum' name='[sum:new_deaths:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1w1en2f1ejr3or1cekije1cb8oyi].[Longitude (generated)]' field-type='quantitative' max='33488102.662802506' min='25636922.750218663' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1w1en2f1ejr3or1cekije1cb8oyi].[Latitude (generated)]' field-type='quantitative' max='7388023.8875703644' min='1600959.8466831888' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1w1en2f1ejr3or1cekije1cb8oyi].[sum:new_deaths:qk]' />
              <text column='[federated.1w1en2f1ejr3or1cekije1cb8oyi].[none:state:nk]' />
              <text column='[federated.1w1en2f1ejr3or1cekije1cb8oyi].[sum:new_deaths:qk]' />
              <lod column='[federated.1w1en2f1ejr3or1cekije1cb8oyi].[none:state:nk]' />
              <geometry column='[federated.1w1en2f1ejr3or1cekije1cb8oyi].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1w1en2f1ejr3or1cekije1cb8oyi].[Latitude (generated)]</rows>
        <cols>[federated.1w1en2f1ejr3or1cekije1cb8oyi].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{AB7D98CE-78EA-44C4-9171-4FABA7F29068}' />
    </worksheet>
    <worksheet name='Sheet 5'>
      <table>
        <view>
          <datasources />
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{D264A700-9DF8-42C7-99F3-D0250CBED5AE}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='COVID and Unemployment' type='storyboard'>
      <style>
        <style-rule element='story-description'>
          <format attr='background-color' id='story-description_6' value='#00000000' />
          <format attr='border-width' id='story-description_6' value='0' />
          <format attr='border-style' id='story-description_6' value='none' />
          <format attr='border-width' id='story-description_7' value='0' />
          <format attr='background-color' id='story-description_7' value='#00000000' />
          <format attr='border-style' id='story-description_7' value='none' />
          <format attr='font-style' id='story-description_7' value='normal' />
          <format attr='font-weight' id='story-description_7' value='normal' />
          <format attr='text-decoration' id='story-description_7' value='none' />
          <format attr='border-width' id='story-description_8' value='0' />
          <format attr='background-color' id='story-description_8' value='#00000000' />
          <format attr='border-style' id='story-description_8' value='none' />
          <format attr='font-style' id='story-description_8' value='normal' />
          <format attr='font-weight' id='story-description_8' value='normal' />
          <format attr='text-decoration' id='story-description_8' value='none' />
        </style-rule>
      </style>
      <size maxheight='964' maxwidth='1016' minheight='964' minwidth='1016' />
      <zones>
        <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='100000' id='2' w='100000' x='0' y='0'>
          <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='98340' id='1' param='vert' removable='false' w='98426' x='787' y='830'>
            <zone _.fcp.SetMembershipControl.false...type='title' _.fcp.SetMembershipControl.true...type-v2='title' h='5187' id='3' w='98426' x='787' y='830' />
            <zone _.fcp.SetMembershipControl.false...type='flipboard-nav' _.fcp.SetMembershipControl.true...type-v2='flipboard-nav' h='10477' id='4' is-fixed='true' paired-zone-id='5' removable='false' w='98426' x='787' y='6017' />
            <zone _.fcp.SetMembershipControl.false...type='flipboard' _.fcp.SetMembershipControl.true...type-v2='flipboard' h='82676' id='5' paired-zone-id='4' removable='false' w='98426' x='787' y='16494'>
              <flipboard active-id='7' nav-type='caption' show-nav-arrows='true'>
                <story-points>
                  <story-point caption='New Cases National Map' captured-sheet='New Cases Map' id='1' />
                  <story-point caption='New Deaths National Map' captured-sheet='New Deaths Map' id='2' />
                  <story-point caption='New cases and  new death in New York ' captured-sheet='New Cases and deaths plot' id='3' />
                  <story-point caption='Nationwide ' captured-sheet='New Cases and deaths plot' id='4'>
                    <capturedDeltas>
                      <worksheet name='New Cases and deaths plot'>
                        <filter class='categorical' column='[federated.1w1en2f1ejr3or1cekije1cb8oyi].[none:state:nk]'>
                          <groupfilter function='level-members' level='[none:state:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
                        </filter>
                      </worksheet>
                    </capturedDeltas>
                  </story-point>
                  <story-point caption='New cases and unemployment in New York' captured-sheet='New Cases and unemployment' id='5'>
                    <capturedDeltas>
                      <worksheet name='New Cases and unemployment'>
                        <filter class='categorical' column='[federated.0wp1y680rxbki7153a5b00oh85n4].[none:State:nk]'>
                          <groupfilter function='member' level='[none:State:nk]' member='&quot;New York&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
                        </filter>
                      </worksheet>
                    </capturedDeltas>
                  </story-point>
                  <story-point caption='New cases and unemployment in New York' captured-sheet='New Cases and unemployment' id='7' />
                </story-points>
              </flipboard>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone _.fcp.SetMembershipControl.false...type='text' _.fcp.SetMembershipControl.true...type-v2='text' flipboard-zone-id='5' h='16598' hidden='true' id='6' story-point-id='3' w='32087' x='33858' y='25311'>
          <formatted-text>
            <run>Highest number of new cases in Janaury 2021
Highest number of new death in April 2020</run>
          </formatted-text>
        </zone>
        <zone _.fcp.SetMembershipControl.false...type='text' _.fcp.SetMembershipControl.true...type-v2='text' flipboard-zone-id='5' h='20228' hidden='true' id='7' story-point-id='5' w='33268' x='57087' y='39419'>
          <formatted-text>
            <run>Unemployment remained high even when the number of new cases decereased over time</run>
          </formatted-text>
        </zone>
        <zone _.fcp.SetMembershipControl.false...type='text' _.fcp.SetMembershipControl.true...type-v2='text' flipboard-zone-id='5' forceUpdate='true' h='20228' id='8' story-point-id='7' w='33268' x='57874' y='42842'>
          <formatted-text>
            <run>Unemployment rate dropped slowly even though the number of new cases were increasing.  </run>
          </formatted-text>
        </zone>
      </zones>
      <simple-id uuid='{8AC0B263-7634-4DA3-9E5E-DFC5A570AA41}' />
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.5' source-height='75'>
    <window class='worksheet' name='New Cases Map'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1w1en2f1ejr3or1cekije1cb8oyi].[sum:new_cases:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1w1en2f1ejr3or1cekije1cb8oyi].[none:state:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='1' />
      </viewpoint>
      <simple-id uuid='{90A23CE0-2F38-451B-97AC-F3FFED20B90F}' />
    </window>
    <window class='worksheet' name='New Deaths Map'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1w1en2f1ejr3or1cekije1cb8oyi].[sum:new_deaths:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1w1en2f1ejr3or1cekije1cb8oyi].[none:state:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='1' />
      </viewpoint>
      <simple-id uuid='{C2F59003-A6D5-4545-BD6F-DC82B1257359}' />
    </window>
    <window class='worksheet' name='New Cases and deaths plot'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='dropdown' param='[federated.1w1en2f1ejr3or1cekije1cb8oyi].[none:state:nk]' type='filter' />
            <card pane-specification-id='1' param='[federated.1w1en2f1ejr3or1cekije1cb8oyi].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1w1en2f1ejr3or1cekije1cb8oyi].[:Measure Names]</field>
            <field>[federated.1w1en2f1ejr3or1cekije1cb8oyi].[none:month:qk]</field>
            <field>[federated.1w1en2f1ejr3or1cekije1cb8oyi].[none:state:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{8D9E3465-96ED-44FD-A889-85AA3113A7CB}' />
    </window>
    <window class='worksheet' name='New Cases and unemployment'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='dropdown' param='[federated.0wp1y680rxbki7153a5b00oh85n4].[none:State:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0wp1y680rxbki7153a5b00oh85n4].[none:Month:nk]</field>
            <field>[federated.0wp1y680rxbki7153a5b00oh85n4].[none:State:nk]</field>
            <field>[federated.1w1en2f1ejr3or1cekije1cb8oyi].[none:month:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{AC75F4A4-9FA2-421C-9E5D-DD5039845F66}' />
    </window>
    <window class='worksheet' name='New Cases and unemployment (2)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0wp1y680rxbki7153a5b00oh85n4].[none:Month:nk]</field>
            <field>[federated.0wp1y680rxbki7153a5b00oh85n4].[none:State:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{D2922A40-83CB-4016-A302-3BA259921EF7}' />
    </window>
    <window class='worksheet' name='Sheet 5'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{3990AE90-9F0E-4A46-9DE0-95A312780D0D}' />
    </window>
    <window class='dashboard' maximized='true' name='COVID and Unemployment'>
      <viewpoints />
      <active id='8' />
      <simple-id uuid='{F6EEB58B-0F39-498D-AA47-74890A363EA6}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='COVID and Unemployment' width='192'>
      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
      tglFAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='New Cases Map' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='New Cases and deaths plot' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='New Cases and unemployment' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='New Cases and unemployment (2)' width='192'>
      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
      kND+H8oCwnvsBndhAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='New Deaths Map' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 5' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABYlAAAWJQFJUiTw
      AAACFUlEQVR4nO3TMQEAIAzAMMC/5yFjRxMFfXpnZg5Eve0A2GQA0gxAmgFIMwBpBiDNAKQZ
      gDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFI
      MwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQD
      kGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBp
      BiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA
      0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDN
      AKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxA
      mgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZ
      gDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFI
      MwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKR9Y+0F
      fBUOM1sAAAAASUVORK5CYII=
    </thumbnail>
  </thumbnails>
</workbook>
